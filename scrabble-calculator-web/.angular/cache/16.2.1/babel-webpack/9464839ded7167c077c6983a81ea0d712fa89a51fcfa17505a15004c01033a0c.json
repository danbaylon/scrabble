{"ast":null,"code":"var _class;\nimport { HttpResponse } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nexport class HttpErrorInterceptor {\n  intercept(req, next) {\n    return next.handle(req).pipe(tap(ev => {\n      if (ev instanceof HttpResponse) {\n        console.log(`processing response ${ev.status}`);\n      }\n    }), catchError(response => {\n      console.log('Processing http error', response);\n      if (response.error) {\n        return throwError(response.error);\n      } else if (response.message) {\n        return throwError(response.message);\n      } else {\n        return throwError(response);\n      }\n    }));\n  }\n}\n_class = HttpErrorInterceptor;\n_class.ɵfac = function HttpErrorInterceptor_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["HttpResponse","throwError","catchError","tap","HttpErrorInterceptor","intercept","req","next","handle","pipe","ev","console","log","status","response","error","message","factory","ɵfac"],"sources":["/Users/dbaylon/Desktop/Development/00 Workspaces/scrabble-impl/Untitled/scrabble/scrabble-calculator-web/src/app/app.http.interceptor.component.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse}\n  from \"@angular/common/http\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError, tap} from \"rxjs/operators\";\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>,\n            next: HttpHandler):\n        Observable<HttpEvent<any>> {\n    return next.handle(req)\n      .pipe(\n        tap((ev: HttpEvent<any>) => {\n          if (ev instanceof HttpResponse) {\n            console.log(`processing response ${ev.status}`);\n          }\n        }),\n        catchError(response => {\n          console.log('Processing http error', response);\n          if (response.error) {\n            return throwError(response.error);\n          } else if (response.message) {\n            return throwError(response.message);\n          } else {\n            return throwError(response);\n          }\n        })\n      );\n  }\n}"],"mappings":";AACA,SAA8DA,YAAY,QACnE,sBAAsB;AAC7B,SAAoBC,UAAU,QAAO,MAAM;AAC3C,SAAQC,UAAU,EAAEC,GAAG,QAAO,gBAAgB;;AAG9C,OAAM,MAAOC,oBAAoB;EAE/BC,SAASA,CAACC,GAAqB,EACrBC,IAAiB;IAEzB,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC,CACpBG,IAAI,CACHN,GAAG,CAAEO,EAAkB,IAAI;MACzB,IAAIA,EAAE,YAAYV,YAAY,EAAE;QAC9BW,OAAO,CAACC,GAAG,CAAC,uBAAuBF,EAAE,CAACG,MAAM,EAAE,CAAC;;IAEnD,CAAC,CAAC,EACFX,UAAU,CAACY,QAAQ,IAAG;MACpBH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,QAAQ,CAAC;MAC9C,IAAIA,QAAQ,CAACC,KAAK,EAAE;QAClB,OAAOd,UAAU,CAACa,QAAQ,CAACC,KAAK,CAAC;OAClC,MAAM,IAAID,QAAQ,CAACE,OAAO,EAAE;QAC3B,OAAOf,UAAU,CAACa,QAAQ,CAACE,OAAO,CAAC;OACpC,MAAM;QACL,OAAOf,UAAU,CAACa,QAAQ,CAAC;;IAE/B,CAAC,CAAC,CACH;EACL;;SAvBWV,oBAAoB;;mBAApBA,MAAoB;AAAA;;SAApBA,MAAoB;EAAAa,OAAA,EAApBb,MAAoB,CAAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}