{"ast":null,"code":"var _class;\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EntryService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8081/app/api/v1\";\n  }\n  saveEntry(entry) {\n    return this.httpClient.post(`${this.baseURL}/entry`, entry).pipe(map(x => {\n      if (x instanceof HttpErrorResponse) {\n        throw x;\n      }\n      return x;\n    }));\n  }\n  getTop10EntryList() {\n    return this.httpClient.get(`${this.baseURL}/entries/top-scores`);\n  }\n}\n_class = EntryService;\n_class.ɵfac = function EntryService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpErrorResponse","map","EntryService","constructor","httpClient","baseURL","saveEntry","entry","post","pipe","x","getTop10EntryList","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/dbaylon/Desktop/Development/00 Workspaces/scrabble-impl/Untitled/scrabble/scrabble-calculator-web/src/app/entry.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { Entry } from './entry';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EntryService {\n\n  private baseURL = \"http://localhost:8081/app/api/v1\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  saveEntry(entry: Entry) : Observable<Object> {\n    return this.httpClient.post(`${this.baseURL}/entry`, entry).pipe(\n                                                                     map(x => {\n                                                                       if (x instanceof HttpErrorResponse) {\n                                                                         throw x;\n                                                                       }\n                                                                       return x;\n                                                                       })\n                                                                     );\n  }\n\n  getTop10EntryList(): Observable<Entry[]>{\n      return this.httpClient.get<Entry[]>(`${this.baseURL}/entries/top-scores`);\n  }\n\n}\n"],"mappings":";AACA,SAAmCA,iBAAiB,QAAQ,sBAAsB;AAGlF,SAASC,GAAG,QAAoB,gBAAgB;;;AAQhD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,kCAAkC;EAEN;EAE9CC,SAASA,CAACC,KAAY;IACpB,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,QAAQ,EAAEE,KAAK,CAAC,CAACE,IAAI,CACCR,GAAG,CAACS,CAAC,IAAG;MACN,IAAIA,CAAC,YAAYV,iBAAiB,EAAE;QAClC,MAAMU,CAAC;;MAET,OAAOA,CAAC;IACR,CAAC,CAAC,CACH;EACpE;EAEAC,iBAAiBA,CAAA;IACb,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,OAAO,qBAAqB,CAAC;EAC7E;;SAnBWH,YAAY;;mBAAZA,MAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZd,MAAY;EAAAe,OAAA,EAAZf,MAAY,CAAAgB,IAAA;EAAAC,UAAA,EAHX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}